/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/login.js":
/*!*************************!*\
  !*** ./src/js/login.js ***!
  \*************************/
/***/ (() => {

eval("let quite = document.querySelector('.quite')\r\nlet logchoice = document.querySelector('.logchoice')\r\nlet icons = document.querySelectorAll('.icons')\r\nlet readchoice = document.querySelector('.readchoice')\r\nlet logInBlock = document.querySelector('.logInBlock')\r\nlet triangle = document.querySelector('.triangle')\r\nlet userName = document.querySelector('.userName')\r\nlet header = document.querySelector('.header')\r\nlet phone = document.querySelector('.phone')\r\nlet password = document.querySelector('.password')\r\nlet logIn = document.querySelector('.logIn')\r\nlet userListItem = document.querySelector('.userListItem')\r\nlet userCollectItem = document.querySelector('.userCollectItem')\r\nlet iLike = document.querySelector('.iLike')\r\nlet logOut = document.querySelector('.logOut')\r\nlet song = document.querySelector('.song')\r\nlet list1 = document.querySelector('.list1')\r\nlet list2 = document.querySelector('.list2')\r\n//登录小方块的交互\r\nquite.addEventListener('click', function () {\r\n    logInBlock.style.display = 'none'\r\n})\r\nuserName.addEventListener('click', function () {\r\n    logInBlock.style.display = 'block'\r\n})\r\ntriangle.addEventListener('click', function () {\r\n    logInBlock.style.display = 'block'\r\n})\r\nheader.addEventListener('click', function () {\r\n    logInBlock.style.display = 'block'\r\n})\r\n//右上角退出×\r\nquite.addEventListener('mouseenter', function () {\r\n    quite.src = \"./images/quite2.png\"\r\n})\r\nquite.addEventListener('mouseleave', function () {\r\n    quite.src = \"./images/quite1.png\"\r\n})\r\n\r\n//自动登录按钮\r\nlet count4 = 0;\r\nlogchoice.addEventListener('click', function () {\r\n    count4++;\r\n    if (count4 % 2 != 0) {\r\n        logchoice.src = \"./images/logchoice1.png\"\r\n    } else {\r\n        logchoice.src = \"./images/logchoice.png\"\r\n    }\r\n})\r\n//其他平台登录图标\r\nfor (let i = 0; i < 4; i++) {\r\n    icons[i].addEventListener('mouseenter', function () {\r\n        icons[i].src = './images/icons_' + i + '0.png'\r\n    })\r\n    icons[i].addEventListener('mouseleave', function () {\r\n        icons[i].src = './images/icons_' + i + '.png'\r\n    })\r\n}\r\n//是否阅读须知\r\nlet count5 = 0;\r\nreadchoice.addEventListener('click', function () {\r\n    count5++;\r\n    if (count5 % 2 != 0) {\r\n        readchoice.src = \"./images/readchoice1.png\"\r\n    } else {\r\n        readchoice.src = \"./images/readchoice.png\"\r\n    }\r\n})\r\niLike.addEventListener('click', () => { //我喜欢的歌单 点击事件\r\n    localStorage.setItem('songListId', iLike.id)\r\n    window.location.href = 'songList.html'\r\n})\r\nlet user = {}\r\nlogIn.addEventListener('click', function () { //点击登录按钮事件\r\n    logInF()\r\n    setTimeout(logInBlock.style.display = 'none', 500)\r\n    logOutF()\r\n})\r\nlet logInF = function () { //登录，获取用户信息\r\n    fetch('http://localhost:3000/login/cellphone?phone=' + phone.value + '&password=' + password.value + '', {\r\n        method: 'POST',\r\n        header: {\r\n            'Content-Type': 'application/xxx-www-form-unlencoded',\r\n        }\r\n    }).then((res) => { return res.json(); }).then(data => {\r\n        if (data.code == 200) { //录入头像、昵称\r\n            sessionStorage.setItem('cookie', data.cookie)\r\n            sessionStorage.setItem('userId', data.profile.userId)\r\n            user.id = data.profile.userId\r\n            user.nickname = data.profile.nickname\r\n            user.avatarUrl = data.profile.avatarUrl\r\n            header.src = user.avatarUrl\r\n            userName.innerText = user.nickname\r\n        } if (data.code !== 200) { //登录失败，返回信息\r\n            alert('' + data.message + '')\r\n        }\r\n    }).then(() => {\r\n        GetUserList(user.id) //登陆成功后插入侧边栏的用户歌单\r\n    })\r\n}\r\n//录入用户的歌单信息\r\nlet userList = []\r\nlet userSelfList = []\r\nlet userCollectList = []\r\nlet GetUserList = function (va) {\r\n    fetch('http://localhost:3000/user/playlist?uid=' + va + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            for (i = 0; i < data.playlist.length; i++) { //数组userList录入用户的歌单信息\r\n                let songList = {}\r\n                songList.coverImgUrl = data.playlist[i].coverImgUrl\r\n                songList.id = data.playlist[i].id\r\n                songList.tags = data.playlist[i].tags\r\n                songList.creator = data.playlist[i].creator\r\n                songList.name = data.playlist[i].name\r\n                songList.userId = data.playlist[i].userId\r\n                songList.creator = data.playlist[i].creator.userId\r\n                userList[i] = songList\r\n            }\r\n            for (let i = 0; i < userList.length; i++) { //歌单分类：或收藏\r\n                if (userList[i].creator == user.id) {//自创\r\n                    userSelfList.push(userList[i])\r\n                } else { //收藏\r\n                    userCollectList.push(userList[i])\r\n                }\r\n            }\r\n            iLike.id = '' + userSelfList[0].id + ''\r\n            sessionStorage.setItem('iLike', userSelfList[0].id)\r\n            for (let i = 0; i < userSelfList.length; i++) { //插入相应数量的歌单方块，写入歌单名字、歌单id\r\n                if (i != 0) { //除去第一个，第一个为我喜欢的歌单\r\n                    document.querySelector('.list1').appendChild(userListItem.cloneNode(true))\r\n                    if (userSelfList[i].name.length > 8) {\r\n                        userListItem.querySelector('.listname').innerText = userSelfList[i].name.substr(0, 8) + \"...\"\r\n                    } else {\r\n                        userListItem.querySelector('.listname').innerText = '' + userSelfList[i].name + ''\r\n                    }\r\n                    userListItem.id = '' + userSelfList[i].id + ''\r\n                }\r\n            }\r\n            for (let i = 0; i < userCollectList.length; i++) {\r\n                document.querySelector('.list2').appendChild(userCollectItem.cloneNode(true))\r\n                if (userCollectList[i].name.length > 8) {\r\n                    userCollectItem.querySelector('.listname').innerText = userCollectList[i].name.substr(0, 8) + \"...\"\r\n                } else {\r\n                    userCollectItem.querySelector('.listname').innerText = '' + userCollectList[i].name + ''\r\n                }\r\n                userCollectItem.id = '' + userCollectList[i].id + ''\r\n            }\r\n            let remove1 = document.querySelector('.list1').querySelector('#remove') //bug修正，详见readme\r\n            let remove2 = document.querySelector('.list2').querySelector('#remove')\r\n            document.querySelector('.list1').removeChild(remove1)\r\n            document.querySelector('.list2').removeChild(remove2)\r\n        })\r\n}\r\nlet clickSideBar = function () { //点击侧边栏的歌单打开歌单详情页\r\n    let userListItem = document.querySelectorAll('.userListItem')\r\n    for (let i = 0; i < userListItem.length; i++) {\r\n        userListItem[i].addEventListener('click', () => {\r\n            localStorage.setItem('songListId', userListItem[i].id)\r\n            window.location.href = 'songList.html'\r\n        })\r\n    }\r\n    let userCollectItem = document.querySelectorAll('.userCollectItem')\r\n    for (let i = 0; i < userCollectItem.length; i++) {\r\n        userCollectItem[i].addEventListener('click', () => {\r\n            localStorage.setItem('songListId', userCollectItem[i].id)\r\n            window.location.href = 'songList.html'\r\n        })\r\n    }\r\n}\r\nlet count6 = 1\r\ndocument.querySelector('.thr1').addEventListener('click', function () { //展开或收起侧边栏歌单\r\n    count6++\r\n    if (count6 % 2 == 0) {\r\n        list1.style.display = 'block'\r\n        document.querySelector('.zhankai1').src = './images/zhankai1.png'\r\n    } else {\r\n        list1.style.display = 'none'\r\n        document.querySelector('.zhankai1').src = './images/zhankai.png'\r\n    }\r\n    if (count6 == 2) {\r\n        clickSideBar()\r\n    }\r\n})\r\nlet count7 = 1\r\ndocument.querySelector('.thr2').addEventListener('click', function () { //展开或收起侧边栏歌单\r\n    count7++\r\n    if (count7 % 2 == 0) {\r\n        list2.style.display = 'block'\r\n        document.querySelector('.zhankai2').src = './images/zhankai1.png'\r\n    } else {\r\n        list2.style.display = 'none'\r\n        document.querySelector('.zhankai2').src = './images/zhankai.png'\r\n    }\r\n})\r\n\r\n//点击底部播放小专辑封面、歌名打开播放页\r\ndocument.querySelector('.littleCover').addEventListener('click', () => {\r\n    window.location.href = 'play.html'\r\n    audio.pause();\r\n})\r\ndocument.querySelector('.playTitle').addEventListener('click', () => {\r\n    window.location.href = 'play.html'\r\n    audio.pause();\r\n})\r\n//登录状态保持\r\nfetch('http://localhost:3000/user/detail?uid=' + sessionStorage.userId + '', {\r\n}).then((res) => { return res.json(); }).then(data => {\r\n    //console.log(data);\r\n    user.id = data.profile.userId\r\n    user.nickname = data.profile.nickname\r\n    user.avatarUrl = data.profile.avatarUrl\r\n    header.src = user.avatarUrl\r\n    userName.innerText = user.nickname\r\n    GetUserList(sessionStorage.userId)\r\n})\r\nlet logOutF = function(){\r\n    if (sessionStorage.userId == undefined) {\r\n        //登录板块展示或隐藏\r\n        quite.romoveEventListener('click', function () {\r\n            logInBlock.style.display = 'none'\r\n        })\r\n        userName.removeEventListener('click', function () {\r\n            logInBlock.style.display = 'block'\r\n        })\r\n        triangle.removeEventListener('click', function () {\r\n            logInBlock.style.display = 'block'\r\n        })\r\n        header.removeEventListener('click', function () {\r\n            logInBlock.style.display = 'block'\r\n        })\r\n    } else {\r\n        let count10 = 1\r\n        userName.addEventListener('click', function () { //展开或收起侧边栏歌单\r\n            count10++\r\n            if (count10 % 2 == 0) {\r\n                logOut.style.display = 'block'\r\n            } else {\r\n                logOut.style.display = 'none'\r\n            }\r\n        })\r\n    }\r\n    logOut.addEventListener('click',function(){\r\n        sessionStorage.clear('userId')\r\n        location.reload()\r\n    })\r\n}\r\n\n\n//# sourceURL=webpack://cloud-music/./src/js/login.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/login.js"]();
/******/ 	
/******/ })()
;