/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/songList.js":
/*!****************************!*\
  !*** ./src/js/songList.js ***!
  \****************************/
/***/ (() => {

eval("let windowWidth = document.body.clientWidth\r\nlet listItem = document.querySelector('.listItem')\r\nlet listItem1 = document.querySelector('.listItem1')\r\nlet listHeader = document.querySelector('.listHeader')\r\nlet change = document.querySelector('.change')\r\nlet list = document.querySelector('.list')\r\nlet audio = document.querySelector('audio')\r\nlet Pdot = document.querySelector('.Pdot')\r\nlet running = document.querySelector('.running')\r\nlet playSong = document.querySelector('.playSong ')\r\nlet comments = document.querySelector('.comments')\r\nlet comment = document.querySelector('.comment')\r\nlet runningGrey = document.querySelector('.runningGrey')\r\nlistHeader.style.width = '' + windowWidth - 300 + 'px'\r\nlistItem.style.width = '' + windowWidth - 300 + 'px'\r\n//change.style.width = '' + windowWidth - 300 + 'px'\r\n//用户喜欢的歌单\r\nif (sessionStorage.iLike == localStorage.songListId) {\r\n    fetch('http://localhost:3000/playlist/detail?id=' + sessionStorage.iLike + '&cookie=' + sessionStorage.cookie + '', {\r\n    }).then((res) => { return res.json(); }).then(data => {\r\n        document.title = data.playlist.name\r\n        document.querySelector('.songCover').src = '' + data.playlist.coverImgUrl + ''\r\n        document.querySelector('.listName').innerHTML = '<img src=\"./images/songlisticon.png\">' + data.playlist.name + ''\r\n        document.querySelector('.creatorAvatar').src = '' + data.playlist.creator.avatarUrl + ''\r\n        document.querySelector('.creator').innerText = '' + data.playlist.creator.nickname + ''\r\n        document.querySelector('.btn1').innerHTML = '<img src=\"./images/collecticon.png\"> 收藏(' + data.playlist.subscribedCount + ')'\r\n        document.querySelector('.tag').innerHTML = '标签:' + data.playlist.tags + ''\r\n        document.querySelector('.count').innerHTML = '歌曲:' + data.playlist.trackCount + ' 播放:' + data.playlist.playCount + ''\r\n        document.querySelector('.state').innerText = '简介:' + data.playlist.description + ''\r\n        if (data.playlist.description.length > 30) { //简介过长变点\r\n            document.querySelector('.state').innerText = '简介:' + data.playlist.description.substr(0, 30) + '...'\r\n        } else {\r\n            document.querySelector('.state').innerText = '简介:' + data.playlist.description + ''\r\n        }\r\n    })\r\n    fetch('http://localhost:3000/likelist?uid=' + sessionStorage.userId + '&cookie=' + sessionStorage.cookie + '', {\r\n    }).then((res) => { return res.json(); }).then(data => {\r\n        fetch('http://localhost:3000/song/detail?ids=' + data.ids.join(\",\") + '')\r\n            .then(res => { return res.json() }).then(data => {\r\n                for (let i = 0; i < data.songs.length; i++) {\r\n                    songIdList.push(data.songs[i].id)//录入歌单中歌曲的id\r\n                }\r\n                localStorage.setItem('songIdList', songIdList)//存歌单歌曲id入本地\r\n                list.style.height = '' + data.songs.length * 50 + 'px'\r\n                data.songs.push(data.songs[1])\r\n                data.songs.push(data.songs[0])//修正\r\n                data.songs.shift(data.songs[1])\r\n                data.songs.shift(data.songs[0])\r\n                for (let i = 0; i < data.songs.length; i++) {\r\n                    songIdList.push(data.songs[i].id)//给每个歌曲方块录入id\r\n                    if (i % 2 == 0) {\r\n                        document.querySelector('.list').append(listItem.cloneNode(true))\r\n                        listItem.id = i\r\n                        //判断是否有并插入详细描述\r\n                        if (data.songs[i].tns != undefined) {\r\n                            listItem.querySelector('.title').innerText = '' + data.songs[i].name + ' (' + data.songs[i].tns + ')'\r\n                        } else {\r\n                            listItem.querySelector('.title').innerText = '' + data.songs[i].name + ''\r\n                        }\r\n                        //歌手名字专辑名字过长变...\r\n                        if (data.songs[i].ar[0].name.length > 15) {\r\n                            listItem.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name.substr(0, 15) + '...'\r\n                        } else {\r\n                            listItem.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name + ''\r\n                        }\r\n                        if (data.songs[i].al.name.length > 30) {\r\n                            listItem.querySelector('.album').innerText = '' + data.songs[i].al.name.substr(0, 30) + '...'\r\n                        } else {\r\n                            listItem.querySelector('.album').innerText = '' + data.songs[i].al.name + ''\r\n                        }\r\n                        listItem.id = data.songs[i].id\r\n                        let m = parseInt(data.songs[i].dt / 60000)//歌曲的时间\r\n                        let s = parseInt(data.songs[i].dt % 60)\r\n                        listItem.querySelector('.time').innerText = '' + m + ':' + s + ''\r\n                    } else { //同上，这里插入底色为白色的方块\r\n                        document.querySelector('.list').append(listItem1.cloneNode(true))\r\n                        listItem1.id = i\r\n                        if (data.songs[i].tns != undefined) {\r\n                            listItem1.querySelector('.title').innerText = '' + data.songs[i].name + ' (' + data.songs[i].tns + ')'\r\n                        } else {\r\n                            listItem1.querySelector('.title').innerText = '' + data.songs[i].name + ''\r\n                        }\r\n                        if (data.songs[i].ar[0].name.length > 10) {\r\n                            listItem1.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name.substr(0, 10) + '...'\r\n                        } else {\r\n                            listItem1.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name + ''\r\n                        }\r\n                        if (data.songs[i].al.name.length > 20) {\r\n                            listItem1.querySelector('.album').innerText = '' + data.songs[i].al.name.substr(0, 20) + '...'\r\n                        } else {\r\n                            listItem1.querySelector('.album').innerText = '' + data.songs[i].al.name + ''\r\n                        }\r\n                        listItem1.id = data.songs[i].id\r\n                        let m = parseInt(data.songs[i].dt / 60000)\r\n                        let s = parseInt(data.songs[i].dt % 60)\r\n                        listItem1.querySelector('.time').innerText = '' + m + ':' + s + ''\r\n                    }\r\n                }\r\n                let remove = list.querySelectorAll('#remove')\r\n                for (let i = 0; i < remove.length; i++) {\r\n                    list.removeChild(remove[i])\r\n                }\r\n            })\r\n    })\r\n}\r\nlet songIdList = []\r\nlet load = function (id) {\r\n    //页面顶部歌单信息插入\r\n    fetch('http://localhost:3000/playlist/detail?id=' + id + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            console.log(data);\r\n            document.title = data.playlist.name\r\n            let time = new Date(data.playlist.createTime);\r\n            document.querySelector('.date').innerText = ' '+time.getFullYear()+'-'+time.getMonth()+'-'+time.getDate()+'创建'\r\n            document.querySelector('.songCover').src = '' + data.playlist.coverImgUrl + ''\r\n            document.querySelector('.listName').innerHTML = '<img src=\"./images/songlisticon.png\">' + data.playlist.name + ''\r\n            document.querySelector('.creatorAvatar').src = '' + data.playlist.creator.avatarUrl + ''\r\n            document.querySelector('.creator').innerText = '' + data.playlist.creator.nickname + ' '\r\n            document.querySelector('.btn1').innerHTML = '<img src=\"./images/collecticon.png\"> 收藏(' + data.playlist.subscribedCount + ')'\r\n            document.querySelector('.tag').innerHTML = '标签:' + data.playlist.tags + ''\r\n            document.querySelector('.count').innerHTML = '歌曲:' + data.playlist.trackCount + ' 播放:' + data.playlist.playCount + ''\r\n            document.querySelector('.state').innerText = '简介:' + data.playlist.description + ''\r\n            document.querySelector('.commentSwitch').innerText = '评论('+data.playlist.commentCount+')'\r\n            if (data.playlist.description.length > 30) { //简介过长变点\r\n                document.querySelector('.state').innerText = '简介:' + data.playlist.description.substr(0, 30) + '...'\r\n            } else {\r\n                document.querySelector('.state').innerText = '简介:' + data.playlist.description + ''\r\n            }\r\n        })\r\n    //歌单所有歌曲信息\r\n    fetch('http://localhost:3000/playlist/track/all?id=' + id + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            for (let i = 0; i < data.songs.length; i++) {\r\n                songIdList.push(data.songs[i].id)//录入歌单中歌曲的id\r\n            }\r\n            localStorage.setItem('songIdList', songIdList)//存歌单歌曲id入本地\r\n            list.style.height = '' + data.songs.length * 50 + 'px'\r\n            data.songs.push(data.songs[1])\r\n            data.songs.push(data.songs[0])//修正\r\n            data.songs.shift(data.songs[1])\r\n            data.songs.shift(data.songs[0])\r\n            for (let i = 0; i < data.songs.length; i++) {\r\n                songIdList.push(data.songs[i].id)//给每个歌曲方块录入id\r\n                if (i % 2 == 0) {\r\n                    document.querySelector('.list').append(listItem.cloneNode(true))\r\n                    listItem.id = i\r\n                    //判断是否有并插入详细描述\r\n                    if (data.songs[i].tns != undefined) {\r\n                        listItem.querySelector('.title').innerText = '' + data.songs[i].name + ' (' + data.songs[i].tns + ')'\r\n                    } else {\r\n                        listItem.querySelector('.title').innerText = '' + data.songs[i].name + ''\r\n                    }\r\n                    //歌手名字专辑名字过长变...\r\n                    if (data.songs[i].ar[0].name.length > 15) {\r\n                        listItem.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name.substr(0, 15) + '...'\r\n                    } else {\r\n                        listItem.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name + ''\r\n                    }\r\n                    if (data.songs[i].al.name.length > 30) {\r\n                        listItem.querySelector('.album').innerText = '' + data.songs[i].al.name.substr(0, 30) + '...'\r\n                    } else {\r\n                        listItem.querySelector('.album').innerText = '' + data.songs[i].al.name + ''\r\n                    }\r\n                    listItem.id = data.songs[i].id\r\n                    let m = parseInt(data.songs[i].dt / 60000)//歌曲的时间\r\n                    let s = parseInt(data.songs[i].dt % 60)\r\n                    listItem.querySelector('.time').innerText = '' + m + ':' + s + ''\r\n                } else { //同上，这里插入底色为白色的方块\r\n                    document.querySelector('.list').append(listItem1.cloneNode(true))\r\n                    listItem1.id = i\r\n                    if (data.songs[i].tns != undefined) {\r\n                        listItem1.querySelector('.title').innerText = '' + data.songs[i].name + ' (' + data.songs[i].tns + ')'\r\n                    } else {\r\n                        listItem1.querySelector('.title').innerText = '' + data.songs[i].name + ''\r\n                    }\r\n                    if (data.songs[i].ar[0].name.length > 10) {\r\n                        listItem1.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name.substr(0, 10) + '...'\r\n                    } else {\r\n                        listItem1.querySelector('.singer').innerText = '' + data.songs[i].ar[0].name + ''\r\n                    }\r\n                    if (data.songs[i].al.name.length > 20) {\r\n                        listItem1.querySelector('.album').innerText = '' + data.songs[i].al.name.substr(0, 20) + '...'\r\n                    } else {\r\n                        listItem1.querySelector('.album').innerText = '' + data.songs[i].al.name + ''\r\n                    }\r\n                    listItem1.id = data.songs[i].id\r\n                    let m = parseInt(data.songs[i].dt / 60000)\r\n                    let s = parseInt(data.songs[i].dt % 60)\r\n                    listItem1.querySelector('.time').innerText = '' + m + ':' + s + ''\r\n                }\r\n            }\r\n            let remove = list.querySelectorAll('#remove')\r\n            for (let i = 0; i < remove.length; i++) {\r\n                list.removeChild(remove[i])\r\n            }\r\n        })\r\n}\r\nload(localStorage.songListId)\r\n//插入歌单序号,id\r\nlet numF = function () {\r\n    if (document.querySelector('.list').children.length !== 2) { //插入完成后\r\n        //插入序号\r\n        for (let i = 1; i < document.querySelector('.list').children.length + 1; i++) {\r\n            document.querySelectorAll('.listItem')[i - 1].querySelector('.num').innerHTML = '' + i + '<img src=\"./images/listheart.png\"><img src=\"./images/listdown.png\">'\r\n        }\r\n        //存id入本地存储\r\n        let listItem = document.querySelectorAll('.listItem')\r\n        for (let i = 0; i < listItem.length; i++) {\r\n            listItem[i].addEventListener('click', () => {\r\n                localStorage.setItem('songId', listItem[i].id)\r\n                window.location.href = 'play.html'\r\n            })\r\n        }\r\n        clearInterval(numTimer)\r\n    }\r\n}//在这之前一直检查是否插入完毕\r\nlet numTimer = setInterval(numF, 100)\r\nlet getLittle = function () {\r\n    fetch('http://localhost:3000/song/url?id=' + localStorage.songId + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            audio.src = data.data[0].url\r\n        })\r\n    fetch('http://localhost:3000/song/detail?ids=' + localStorage.songId + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            document.querySelector('.playTitle').innerText = data.songs[0].name\r\n            document.querySelector('.littleCover').src = data.songs[0].al.picUrl\r\n            document.querySelector('.playSinger').innerText = '' + data.songs[0].ar[0].name + ' / ' + data.songs[0].al.name + ''\r\n        })\r\n}\r\ngetLittle()\r\n//控制播放\r\n//获取歌曲信息\r\nlet get = function () {\r\n    let duration = document.querySelector('.audio').duration;\r\n    let currentTime = document.querySelector('.audio').currentTime;\r\n    //插入时间\r\n    let m = parseInt(duration / 60)\r\n    let s = parseInt(duration % 60)\r\n    let mm = parseInt(currentTime / 60)\r\n    let ss = parseInt(currentTime % 60)\r\n    document.querySelector('.totalTime').innerText = '' + m + ':' + s + ''\r\n    document.querySelector('.nowTime').innerText = '' + mm + ':' + ss + ''\r\n    //进度圆点前进\r\n    Pdot.style.left = '' + (currentTime / duration) * 560 + 'px'\r\n    runningGrey.style.width = '' + (currentTime / duration) * 560 + 'px' \r\n}\r\nsetTimeout(get, 800)\r\nlet timer = setInterval(get, 1000)//一秒刷新一次\r\n//拖动进度条\r\nrunning.addEventListener('click', () => {\r\n    let Fpos = running.getBoundingClientRect().left\r\n    let Spos = event.clientX\r\n    let percentage = (Spos - Fpos) / 560\r\n    document.querySelector('.audio').currentTime = document.querySelector('.audio').duration * percentage\r\n    Pdot.style.left = '' + Spos - Fpos - 7.5 + 'px'\r\n    runningGrey.style.width = '' + Spos - Fpos - 7.5 + 'px' \r\n})\r\nrunningGrey.addEventListener('click', () => {\r\n    let Fpos = running.getBoundingClientRect().left\r\n    let Spos = event.clientX\r\n    let percentage = (Spos - Fpos) / 560\r\n    document.querySelector('.audio').currentTime = document.querySelector('.audio').duration * percentage\r\n    Pdot.style.left = '' + Spos - Fpos - 7.5 + 'px'\r\n    runningGrey.style.width = '' + Spos - Fpos - 7.5 + 'px' \r\n})\r\nlet playBtns = document.querySelectorAll('.btns img')\r\nplaySong.addEventListener('click', () => { //中间的三角按钮\r\n    get()\r\n    if (audio.paused) {\r\n        playBtns[2].src = './images/play12.png'\r\n        playBtns[2].addEventListener('mouseenter', function () {\r\n            playBtns[2].src = './images/play121.png'\r\n        })\r\n        playBtns[2].addEventListener('mouseleave', function () {\r\n            playBtns[2].src = './images/play12.png'\r\n        })\r\n        audio.play();//播放\r\n    } else {\r\n        playBtns[2].src = './images/play1.png'\r\n        playBtns[2].addEventListener('mouseenter', function () {\r\n            playBtns[2].src = './images/play21.png'\r\n        })\r\n        playBtns[2].addEventListener('mouseleave', function () {\r\n            playBtns[2].src = './images/play2.png'\r\n        })\r\n        audio.pause();//暂停\r\n    }\r\n})\r\n//音量调节\r\nlet volumBtn = document.querySelector('.volumBtn')\r\nlet volumL = document.querySelector('.l')\r\nlet volumD = document.querySelector('.d')\r\nlet count8 = 0;\r\nvolumBtn.addEventListener('click', function () {\r\n    count8++;\r\n    if (count8 % 2 != 0) {\r\n        document.querySelector('.volum').style.display = 'block'\r\n    } else {\r\n        document.querySelector('.volum').style.display = 'none'\r\n    }\r\n})\r\nvolumL.addEventListener('click', () => {\r\n    let Fpos = volumL.getBoundingClientRect().bottom\r\n    let Spos = event.clientY\r\n    let persentage = (Fpos - Spos) / 100\r\n    console.log(persentage);\r\n    volumD.style.marginTop = '' + -(7 + (persentage * 100)) + 'px'\r\n    audio.volume = persentage\r\n})\r\n//评论\r\nlet commentF = function () {\r\n    fetch('http://localhost:3000/comment/playlist?id=' + localStorage.songListId + '')\r\n        .then(res => { return res.json() }).then(data => {\r\n            //热评\r\n            for (let i = 0; i < data.hotComments.length; i++) {\r\n                document.querySelector('.comment').append(comments.cloneNode(true))\r\n                comment.querySelector('.Chead').src = '' + data.hotComments[i].user.avatarUrl + ''\r\n                comment.querySelector('.Cinner a').innerText = '' + data.hotComments[i].user.nickname + ''\r\n                comment.querySelector('.inner').innerText = ':' + data.hotComments[i].content + ''\r\n                comment.querySelector('.Ctime').innerText = '' + data.hotComments[i].timeStr + ''\r\n                comment.querySelector('.CCright span').innerText = '' + data.hotComments[i].likedCount + ''\r\n            }\r\n            let moreComment = document.createElement(\"img\")\r\n            moreComment.src = \"./images/morecomment.png\"\r\n            moreComment.style.marginLeft = '30%'\r\n            moreComment.style.cursor = 'pointer'\r\n            comment.appendChild(moreComment)\r\n            let cNum1 = document.querySelector(\".cNum\")\r\n            cNum1.innerText = '全部评论(' + data.total + ')'\r\n            comment.append(cNum1.cloneNode(true))\r\n            //普通评论\r\n            for (let i = 0; i < data.comments.length; i++) {\r\n                document.querySelector('.comment').append(comments.cloneNode(true))\r\n                comment.querySelector('.Chead').src = '' + data.comments[i].user.avatarUrl + ''\r\n                comment.querySelector('.Cinner a').innerText = '' + data.comments[i].user.nickname + ''\r\n                comment.querySelector('.inner').innerText = ':' + data.comments[i].content + ''\r\n                comment.querySelector('.Ctime').innerText = '' + data.comments[i].timeStr + ''\r\n                comment.querySelector('.CCright span').innerText = '' + data.comments[i].likedCount + ''\r\n            }\r\n            //完全没修好的bug\r\n            let remove2 = comment.children[1]\r\n            let remove3 = comment.children[2]\r\n            comment.appendChild(remove2)\r\n            comment.removeChild(remove3)\r\n            let temp = data.hotComments.length + 2\r\n            let remove1 = comment.children[temp]\r\n            comment.removeChild(remove1)\r\n            comment.children[temp]\r\n        })\r\n}\r\ncommentF()\r\nlet listSwitch = document.querySelector('.listSwitch')\r\nlet commentSwitch = document.querySelector('.commentSwitch')\r\nlet top1 = document.querySelector('.top1')\r\n\r\n//歌单评论切换\r\nlistSwitch.addEventListener('click', () => {\r\n    top1.style.display = 'block'\r\n    comment.style.display = 'none'\r\n    listSwitch.className = 'switchAfter listSwitch'\r\n    commentSwitch.className = 'switchBefore commentSwitch'\r\n})\r\n\r\ncommentSwitch.addEventListener('click', () => {\r\n    top1.style.display = 'none'\r\n    comment.style.display = 'block'\r\n    listSwitch.className = 'switchBefore listSwitch'\r\n    commentSwitch.className = 'switchAfter commentSwitch'\r\n})\r\n//热搜\r\nlet hotSearch = document.querySelector('.hotSearch')\r\nlet searchs = document.querySelectorAll('.hotSearch div')\r\n\r\nfor (let i = 0; i < 20; i++) { //热搜方块鼠标移入样式改变\r\n    searchs[i].addEventListener('mouseenter', function () {\r\n        searchs[i].style.backgroundColor = 'rgb(242, 242, 242)'\r\n    })\r\n    searchs[i].addEventListener('mouseleave', function () {\r\n        searchs[i].style.backgroundColor = '#fff'\r\n    })\r\n}\r\nfetch('http://localhost:3000/search/hot/detail')\r\n    .then(res => { return res.json() }).then(data => {\r\n        for (let i = 0; i < 20; i++) {\r\n            searchs[i].querySelector('.hotName').innerText = data.data[i].searchWord\r\n            searchs[i].querySelector('.hotNum').innerText = data.data[i].score\r\n            if (data.data[i].content != '') {\r\n                searchs[i].querySelector('.detile').innerText = data.data[i].content\r\n            }\r\n            if (data.data[i].iconUrl != null) {\r\n                searchs[i].querySelector('img').src = data.data[i].iconUrl\r\n                searchs[i].querySelector('img').style.height = '20px'\r\n            }\r\n            searchs[i].addEventListener('click', function () {\r\n                localStorage.setItem('searchValue', data.data[i].searchWord)\r\n                window.location.href = 'search.html'\r\n            })\r\n        }\r\n    })\r\ndocument.querySelector('.search').onblur = function () {\r\n    setTimeout(\"document.querySelector('.hotSearch').style.display = 'none'\", 100)\r\n}\r\n//默认搜索词\r\nfetch('http://localhost:3000/search/default')\r\n    .then(res => { return res.json() }).then(data => {\r\n        document.querySelector('.search').placeholder = '' + data.data.showKeyword + ''\r\n        localStorage.setItem('realkeyword', data.data.realkeyword)\r\n    })\r\n//搜索\r\nlet search = document.querySelector('.search')\r\nsearch.onfocus = function () {\r\n    document.querySelector('.hotSearch').style.display = 'block'\r\n    document.onkeydown = function (e) {\r\n        let a = e || window.event;\r\n        if (a.keyCode == 13) {\r\n            if (search.value !== '') {\r\n                localStorage.setItem('searchValue', search.value)\r\n                window.location.href = 'search.html'\r\n            } else {\r\n                localStorage.setItem('searchValue', localStorage.realkeyword)\r\n                window.location.href = 'search.html'\r\n            }\r\n        }\r\n    }\r\n}\r\n//上一首下一首\r\nlet preSong = document.querySelector('.preSong')\r\nlet nextSong = document.querySelector('.nextSong')\r\nlet temp3 = 0\r\nlet preId = 0\r\nlet nextId = 0\r\nlet idArr = []\r\nlet fn = function () {\r\n    idArr = localStorage.songIdList.split(',')\r\n    temp3 = 0\r\n    for (let i = 0; i < idArr.length; i++) {\r\n        temp3++\r\n        if (idArr[i] === localStorage.songId) {\r\n            if (temp3 == 1) {  //处于第一首\r\n                preId = idArr[idArr.length - 1]\r\n                nextId = idArr[1]\r\n            } else if (temp3 == idArr.length) { //最后一首\r\n                preId = idArr[idArr.length - 2]\r\n                nextId = idArr[0]\r\n            } else {\r\n                preId = idArr[temp3 - 2]\r\n                nextId = idArr[temp3]\r\n            }\r\n        }\r\n    }\r\n}\r\nlet recolor = function () {\r\n    for (let i = 0; i < document.querySelectorAll('.NlistItem').length; i++) {\r\n        document.querySelectorAll('.NlistItem')[i].style.color = ''\r\n        if (document.querySelectorAll('.NlistItem')[i].id == localStorage.songId) {\r\n            document.querySelectorAll('.NlistItem')[i].style.color = 'red'\r\n        }\r\n    }\r\n}\r\npreSong.addEventListener('click', () => {\r\n    fn()\r\n    localStorage.setItem('songId', preId)\r\n    getLittle()\r\n    recolor()\r\n})\r\nnextSong.addEventListener('click', () => {\r\n    fn()\r\n    localStorage.setItem('songId', nextId)\r\n    getLittle()\r\n    recolor()\r\n})\r\nlet ccc = 0\r\n//播放全部按钮\r\ndocument.querySelector('.playAll').addEventListener('click', () => {\r\n    alert('播放全部会替换当前的播放列表,是否继续?')\r\n    fetch('http://localhost:3000/playlist/track/all?id=' + localStorage.NsongListId + '')//重新加载新歌单的信息\r\n        .then(res => { return res.json() }).then(data => {\r\n            for (let i = 0; i < data.songs.length; i++) {\r\n                songIdList.push(data.songs[i].id)//存下歌单中所有歌曲的id\r\n            }\r\n            localStorage.setItem('songIdList', songIdList)//存歌单歌曲id入本地\r\n        })\r\n    fn()\r\n    localStorage.setItem('songId', idArr[0])\r\n    getLittle() //刷新底部播放板块的歌曲信息\r\n    localStorage.setItem('songListId', localStorage.songListId)\r\n    localStorage.setItem('NsongListId', localStorage.songListId)\r\n    nowFn() //重新获取现在播放的歌曲列表\r\n    location.reload() //这个bug实在找不出来了，直接暴力刷新\r\n})\n\n//# sourceURL=webpack://cloud-music/./src/js/songList.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/songList.js"]();
/******/ 	
/******/ })()
;